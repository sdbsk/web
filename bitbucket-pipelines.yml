# This is an example Starter pipeline configuration
# Use a skeleton to build, test and deploy using manual and parallel steps
# -----
# You can specify a custom docker image from Docker Hub as your build environment.

image: php:8.1-alpine

pipelines:
  default:
#    - parallel:
      - step:
          name: 'Build'
          caches:
              - composer
          script:
              - apt-get update && apt-get install -y unzip openssh-client rsync git-all
              - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
              - COMPOSER_ALLOW_SUPERUSER=1 composer install
              - composer global require deployer/deployer
              - composer global require deployer/recipes --dev
#              - /root/.composer/vendor/bin/dep deploy -vvv test
#      - step:
#          name: 'Lint'
#          script:
#            - echo "Your linting goes here..."
#      - step:
#          name: 'Security scan'
#          script:
#            - echo "Your security scan goes here..."
#
#    # The following deployment steps will be executed for each pipeline run. To configure your steps and conditionally deploy see https://support.atlassian.com/bitbucket-cloud/docs/configure-bitbucket-pipelinesyml/
#    - step:
#        name: 'Deployment to Staging'
#        deployment: staging
#        script:
#          - echo "Your deployment to staging script goes here..."
#    - step:
#        name: 'Deployment to Production'
#        deployment: production
#        trigger: 'manual'
#        script:
#          - echo "Your deployment to production script goes here..."
